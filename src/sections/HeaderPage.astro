---
import OpenNavButton from "@/components/buttons/OpenNavButton.astro";
import UIBottom from "@/components/buttons/UIBottom.astro";
import NavMobile from "@/components/home/NavMobile.astro";
---

<header
  class="bg-light-secondary sticky top-0 z-10 animate-header p-4 border-b border-light-border dark:bg-dark-secondary dark:border-dark-border"
>
  <!-- <NavMobile /> -->
  <div class="w-full max-w-6xl mx-auto flex justify-between items-center">
    <a href="/" class="w-30 block order-1">
      <img src="/logo.webp" alt="Logo de Fitnancial" class="w-full" />
    </a>
    <NavMobile />
    <div class="order-2 md:order-3">
      <UIBottom text="Iniciar sesiÃ³n" href="/login" />
    </div>
    <div class="order-4 md:order-1">
      <OpenNavButton />
    </div>

    <!-- header -->
    <style>
      .animate-header {
        /* transition: all 2s; */
        animation: scrollDown 2s linear both;
        animation-timeline: scroll(root);
        animation-range: 0 200px;
      }

      @keyframes scrollDown {
        0% {
          scale: 1;
          border-radius: 0px;
          box-shadow: transparent;
        }
        100% {
          scale: 0.95;
          border-radius: 37px;
          box-shadow: 0 8px 12px #00000020;
        }
      }
    </style>
  </div>
</header>

<script>
  window.addEventListener("DOMContentLoaded", () => {
    const sections = document.querySelectorAll(".section");
    const navItems = document.querySelectorAll(".btn-nav");

    const callback = (entries: any[]) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute("aria-label") == entry.target.id) {
              item.classList.add("active");
            } else {
              item.classList.remove("active");
            }
          });
        }
      });
    };

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: "0px",
      threshold: 0.35,
    });

    sections.forEach((section) => {
      observer.observe(section);
    });

    // Cleanup function
    document.onvisibilitychange = () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect();
      } else {
        sections.forEach((section) => {
          observer.observe(section);
        });
      }
    };
  });
</script>
